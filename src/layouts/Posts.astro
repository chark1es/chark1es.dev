---
import FormattedDate from "@/components/FormattedDate.astro";
import Layout from "@/layouts/Layout.astro";
import SectionContainer from "@/components/SectionContainer.astro";

import { SITE } from "@config";
import { CollectionEntry } from "astro:content";

export interface Props {
    pageNum: number;
    totalPages: number;
    posts: CollectionEntry<"blogs">[];
    title: string;
}

const { pageNum, totalPages, posts, title } = Astro.props;

const prev = pageNum > 1 ? "" : "disabled";
const next = pageNum < totalPages ? "" : "disabled";

// Remove current url path and remove trailing slash if exists
const currentUrlPath = Astro.url.pathname.replace(/\/+$/, "");

// Get url array from path
// eg: /tags/tailwindcss => ['tags', 'tailwindcss']
const breadcrumbList = currentUrlPath.split("/").slice(1);
---

<Layout
    title={`${title} - ${SITE.title}`}
    description={`A list of posts from ${SITE.author} in ${SITE.title}`}
>
    <div
        class="main-wrapper wrap-md grid gap-16 md:gap-24 lg:gap-32 mx-auto"
    >
        <SectionContainer class="blogs--container mt-32">
            <a
                href="/"
                class="font-medium flex no-underline text-neutral-500 mb-8"
            >
                Back to home
            </a>
            {
                breadcrumbList.map((breadcrumb, index) =>
                    index + 1 === breadcrumbList.length ? (
                        <h2 class="font-medium text-h4 text-neutral-500 my-4 leading-8 tracking-tighter">
                            {breadcrumbList[0] === "blogs" && "Blogs"}
                            <span class="ml-2 opacity-70 text-xl">
                                {breadcrumbList[0] === "blogs" &&
                                    `(Page ${breadcrumbList[0 + 1] || 1})`}
                            </span>
                        </h2>
                    ) : (
                        ""
                    )
                )
            }

            <ul class="list-none space-y-5">
                {
                    posts.map((post) => (
                        <li class="flex flex-col gap-1">
                            <a
                                href={`/blogs/${post.slug}`}
                                class="block w-full card-clip p-8 no-underline sm:flex-row sm:gap-8 dark:bg-dark_mode_post bg-neutral-50 rounded-[40px] transition-all duration-300"
                            >
                                <span class="grid flex-1 gap-1">
                                    <span class="text-neutral-900 dark:text-white-500 line-clamp-1 md:inline-flex items-center">
                                        <span class="inline-block font-medium">
                                            {post.data.title}
                                        </span>
                                        <span class=" dark:bg-dark_mode_post dark:text-dark_mode_text md:mb-0 my-2 md:my-0 md:ml-2 text-sm w-max md:w-auto items-center rounded-full border border-neutral-300 bg-white px-1 py-[2px] font-medium text-primary-500 block md:inline-flex">
                                            <span class="px-2">
                                                <FormattedDate
                                                    date={post.data.pubDate}
                                                />
                                            </span>
                                        </span>
                                    </span>
                                    <span class="text-neutral-500 dark:text-dark_mode_text line-clamp-2 ">
                                        {post.data.description}
                                    </span>
                                </span>
                            </a>
                        </li>
                    ))
                }
            </ul>
            {
                totalPages > 1 && (
                    <nav
                        class="pagination--container flex flex-wrap mx-auto justify-center mt-8 text-neutral-500"
                        aria-label="Pagination"
                    >
                        <a
                            tabindex={prev === "disabled" ? "-1" : "0"}
                            href={`/blogs${
                                pageNum - 1 !== 1 ? "/" + (pageNum - 1) : "/"
                            }`}
                            class={`mr-4 select-none flex flex-wrap ${
                                prev === "disabled"
                                    ? "disabled select-none pointer-events-none opacity-70"
                                    : ""
                            }`}
                            aria-label="Previous"
                            aria-disabled={prev === "disabled"}
                        >
                            Prev
                        </a>
                        <a
                            tabindex={next === "disabled" ? "-1" : "0"}
                            href={`/blogs/${pageNum + 1}`}
                            class={`ml-4 select-none flex flex-wrap ${
                                next === "disabled"
                                    ? "disabled select-none pointer-events-none opacity-70"
                                    : ""
                            }`}
                            aria-label="Next"
                            aria-disabled={next === "disabled"}
                        >
                            Next
                        </a>
                    </nav>
                )
            }
        </SectionContainer>
    </div>
</Layout>
