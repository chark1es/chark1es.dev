---
// Import the global.css file here so that it is included on
// all pages through the use of the <SEO /> component.
import "../styles/globals.scss";
import SectionContainer from "@/components/SectionContainer.astro";
import SEO from "@/components/seo/SEO.astro";

import { SOCIALS } from "@config";
import Navigation from "../components/Navigation.astro";
import { ViewTransitions } from "astro:transitions";
const currentYear = new Date().getFullYear();

const {
    class: className,
    title,
    description,
    keywords,
    url,
    // twitterhandle,
    image
} = Astro.props;
---

<html lang="en">
    <head>
        <SEO
            title={title}
            description={description}
            keywords={keywords}
            url={url}
            image={image}
        />

        <ViewTransitions />

        <script src="../../node_modules/flowbite/dist/flowbite.min.js"></script>
        <script is:inline>
            // It's best to inline this in `head` to avoid FOUC (flash of unstyled content) when changing pages or themes

            if (
                localStorage.getItem("color-theme") === "dark" ||
                (!("color-theme" in localStorage) &&
                    window.matchMedia("(prefers-color-scheme: dark)").matches)
            ) {
                document.documentElement.classList.add("dark");
            } else {
                document.documentElement.classList.remove("dark");
            }
        </script>

        <script
            src="https://code.iconify.design/iconify-icon/1.0.8/iconify-icon.min.js"
        ></script>
    </head>
    <Navigation />
    <body class="dark:bg-dark_mode_bg bg-neutral-50">
        <main class={className}>
            <slot />
        </main>

        <SectionContainer class="mt-32 sticky top-[100vh]">
            <footer class="py-20 bg-neutral-50 dark:bg-dark_mode_bg">
                <div class="wrap-sm mx-auto px-8 grid gap-8">
                    <span
                        class="text-neutral-500 text-sm flex flex-wrap mx-auto gap-4 md:gap-0 md:justify-between"
                    >
                        <span class="">Copyright Â© {currentYear} chark1es</span
                        >
                        <a class="" href="https://www.chark1es.dev/"> </a>
                    </span>
                </div>
            </footer>
        </SectionContainer>

        <button
            id="scrollToTopBtn"
            class="dark:text-dark_mode_text bg-gray-100 dark:bg-dark_mode_post duration-500 hover:scale-110 items-center justify-center text-gray-400 bottom-5 fixed h-10 inline-flex right-3 rounded-lg shadow-xl transition w-10 z-10 hidden opacity-0"
        >
            <iconify-icon
                icon="fluent:arrow-up-12-filled"
                height="20"
                width="20"></iconify-icon>
        </button>

        <script>
            const setFixedWidth = () => {
                const navBar = document.querySelector("nav");
                // Add a class to the navigation bar to set a fixed width
                navBar.classList.add("fixed-width");
                // Ensure scrollbar is always visible
                document.body.style.overflowY = "scroll";
            };

            const setDarkMode = () => {
                const themeToggleDarkIcon = document.getElementById(
                    "theme-toggle-dark-icon"
                );
                const themeToggleLightIcon = document.getElementById(
                    "theme-toggle-light-icon"
                );

                const isDarkMode =
                    localStorage.getItem("color-theme") === "dark" ||
                    (!localStorage.getItem("color-theme") &&
                        window.matchMedia("(prefers-color-scheme: dark)")
                            .matches);

                if (isDarkMode) {
                    document.documentElement.classList.add("dark");
                    themeToggleDarkIcon.classList.remove("hidden");
                    themeToggleLightIcon.classList.add("hidden");
                } else {
                    document.documentElement.classList.remove("dark");
                    themeToggleDarkIcon.classList.add("hidden");
                    themeToggleLightIcon.classList.remove("hidden");
                }
            };

            const handleScroll = () => {
                const scrollToTopBtn =
                    document.getElementById("scrollToTopBtn");

                if (window.pageYOffset > 0) {
                    scrollToTopBtn.classList.remove("hidden");
                    setTimeout(() => {
                        scrollToTopBtn.classList.add("fade-in");
                    }, 10); // Add a small delay before adding the fade-in class
                    scrollToTopBtn.classList.remove("fade-out");
                } else {
                    scrollToTopBtn.classList.remove("fade-in");
                    scrollToTopBtn.classList.add("fade-out");
                    setTimeout(() => {
                        scrollToTopBtn.classList.add("hidden");
                    }, 500); // Adjust the timeout value as desired
                }
            };

            const scrollToTop = () => {
                window.scrollTo({
                    top: 0,
                    behavior: "smooth"
                });
            };

            document.addEventListener("astro:after-swap", () => {
                setFixedWidth();
                setDarkMode();
                handleScroll();

                const scrollToTopBtn =
                    document.getElementById("scrollToTopBtn");
                scrollToTopBtn.removeEventListener("click", scrollToTop);
                scrollToTopBtn.addEventListener("click", scrollToTop);
            });

            document.addEventListener("DOMContentLoaded", () => {
                setDarkMode();
                setFixedWidth();

                const scrollToTopBtn =
                    document.getElementById("scrollToTopBtn");
                scrollToTopBtn.addEventListener("click", scrollToTop);
            });

            window.addEventListener("scroll", handleScroll);
        </script>

        <style>
            .fade-in {
                opacity: 1;
                transition: opacity 0.5s ease-in;
            }

            .fade-out {
                opacity: 0;
                transition: opacity 0.5s ease-out;
            }
            body {
                overflow-y: scroll;
            }

            /* Style the scrollbar for WebKit (Chrome, Safari) */
            body::-webkit-scrollbar {
                width: 12px;
                background-color: transparent;
            }

            body::-webkit-scrollbar-track {
                background-color: transparent;
            }

            body::-webkit-scrollbar-thumb {
                border-radius: 8px;
                background-color: #363636;
            }

            body::-webkit-scrollbar-thumb:hover {
                background-color: #555;
            }

            /* Style the scrollbar for Mozilla Firefox */
            body {
                scrollbar-width: thin;
                scrollbar-color: #363636 transparent;
            }

            body::-moz-scrollbar {
                width: 12px;
                background-color: transparent;
            }

            body::-moz-scrollbar-track {
                background-color: transparent;
            }

            body::-moz-scrollbar-thumb {
                border-radius: 8px;
                background-color: #363636;
            }

            body::-moz-scrollbar-thumb:hover {
                background-color: #555;
            }
        </style>
    </body>
</html>
