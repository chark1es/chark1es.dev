---
// Import the global.css file here so that it is included on
// all pages through the use of the <SEO /> component.
import "../styles/globals.scss";
import SectionContainer from "@/components/SectionContainer.astro";
import SEO from "@/components/seo/SEO.astro";

import { SOCIALS } from "@config";
import Navigation from "../components/Navigation.astro";
import { ViewTransitions } from "astro:transitions";
const currentYear = new Date().getFullYear();

const {
    class: className,
    title,
    description,
    keywords,
    url,
    // twitterhandle,
    image
} = Astro.props;
---

<html lang="en">
    <head>
        <SEO
            title={title}
            description={description}
            keywords={keywords}
            url={url}
            image={image}
        />

        <ViewTransitions />

        <script src="../../node_modules/flowbite/dist/flowbite.min.js"></script>
        <script is:inline>
            // It's best to inline this in `head` to avoid FOUC (flash of unstyled content) when changing pages or themes

            if (
                localStorage.getItem("color-theme") === "dark" ||
                (!("color-theme" in localStorage) &&
                    window.matchMedia("(prefers-color-scheme: dark)").matches)
            ) {
                document.documentElement.classList.add("dark");
            } else {
                document.documentElement.classList.remove("dark");
            }
        </script>

        <script
            src="https://code.iconify.design/iconify-icon/1.0.8/iconify-icon.min.js"
        ></script>
    </head>
    <Navigation />
    <body class="dark:bg-dark_mode_bg">
        <main class={className}>
            <slot />
        </main>

        <SectionContainer class="mt-32 sticky top-[100vh]">
            <footer class="py-20 bg-neutral-50 dark:bg-dark_mode_bg">
                <div class="wrap-sm mx-auto px-8 grid gap-8">
                    <span
                        class="text-neutral-500 text-sm flex flex-wrap mx-auto gap-4 md:gap-0 md:justify-between"
                    >
                        <span class="">Copyright Â© {currentYear} chark1es</span
                        >
                        <a class="" href="https://www.chark1es.dev/"> </a>
                    </span>
                </div>
            </footer>
        </SectionContainer>
    </body>

    <script>
        const setFixedWidth = () => {
            const navBar = document.querySelector("nav");

            // Add a class to the navigation bar to set a fixed width
            navBar.classList.add("fixed-width");

            // Ensure scrollbar is always visible
            document.body.style.overflowY = "scroll";
        };

        const setDarkMode = () => {
            const themeToggleDarkIcon = document.getElementById(
                "theme-toggle-dark-icon"
            );
            const themeToggleLightIcon = document.getElementById(
                "theme-toggle-light-icon"
            );
            const themeToggleBtn = document.getElementById("theme-toggle");

            const isDarkMode =
                localStorage.getItem("color-theme") === "dark" ||
                (!localStorage.getItem("color-theme") &&
                    window.matchMedia("(prefers-color-scheme: dark)").matches);

            if (isDarkMode) {
                document.documentElement.classList.add("dark");
                themeToggleDarkIcon.classList.remove("hidden");
                themeToggleLightIcon.classList.add("hidden");
            } else {
                document.documentElement.classList.remove("dark");
                themeToggleDarkIcon.classList.add("hidden");
                themeToggleLightIcon.classList.remove("hidden");
            }
        };

        const handleThemeToggleClick = (e) => {
            // Prevent the default click behavior of the button
            e.preventDefault();

            const themeToggleDarkIcon = document.getElementById(
                "theme-toggle-dark-icon"
            );
            const themeToggleLightIcon = document.getElementById(
                "theme-toggle-light-icon"
            );

            // Toggle icons inside the button
            themeToggleDarkIcon.classList.toggle("hidden");
            themeToggleLightIcon.classList.toggle("hidden");

            // Update the class and local storage based on color theme preference
            if (document.documentElement.classList.contains("dark")) {
                document.documentElement.classList.remove("dark");
                localStorage.setItem("color-theme", "light");
            } else {
                document.documentElement.classList.add("dark");
                localStorage.setItem("color-theme", "dark");
            }
        };

        // Runs before each navigation transition starts
        document.addEventListener("astro:transitionstart", () => {
            setFixedWidth();
        });

        // Runs after each navigation transition completes
        document.addEventListener("astro:after-swap", () => {
            setFixedWidth();
            setDarkMode(); // Update the theme on page transition
        });

        // Runs on initial navigation
        document.addEventListener("DOMContentLoaded", () => {
            setDarkMode();

            const themeToggleBtn = document.getElementById("theme-toggle");
            themeToggleBtn.addEventListener("click", handleThemeToggleClick);
        });
    </script>

    <style>
        body {
            overflow-y: scroll;
        }

        /* Style the scrollbar */
        body::-webkit-scrollbar {
            width: 12px;
            background-color: transparent;
        }

        /* Style the track of the scrollbar */
        body::-webkit-scrollbar-track {
            background-color: transparent;
        }

        /* Style the handle / thumb of the scrollbar */
        body::-webkit-scrollbar-thumb {
            border-radius: 8px;
            background-color: #363636;
        }

        /* Make the scrollbar appear on hover */
        body::-webkit-scrollbar-thumb:hover {
            background-color: #555;
        }
    </style>
</html>
