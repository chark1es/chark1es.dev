---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import Layout from "./Layout.astro";
import SectionContainer from "@/components/SectionContainer.astro";

import { SITE } from "@config";

export interface Props {
    post: CollectionEntry<"blogs">;
}

const { post } = Astro.props;

const { title, description, pubDate, updatedDate, heroImage } = post.data;

const ogUrl = new URL(
    heroImage ? heroImage : `${title.replace(/\s+/g, "-").toLowerCase()}.png`,
    Astro.url.origin
).href;

const { Content } = await post.render();
---

<Layout
    title={`${title} - ${SITE.title}`}
    description={description}
    image={ogUrl}
>
    <div class="main-wrapper wrap-md grid gap-16 md:gap-24 lg:gap-32 mx-auto">
        <SectionContainer class="blogs--container mt-32">
            <a
                class="blog-back-button cursor-pointer text-neutral-500 flex no-underline mb-8"
                href="/blogs/"
            >
                Back
            </a>
            <div class="post--title">
                <h1 class="text-3xl dark:text-white :text-4xl">
                    {title}
                </h1>
            </div>
            <span
                class="dark:bg-dark_mode_bg dark:text-dark_mode_text mb-4 text-sm w-max md:w-auto items-center rounded-full border border-neutral-300 bg-white px-1 py-[2px] font-medium text-primary-500 block md:inline-flex"
            >
                <span class="px-2">
                    <FormattedDate date={pubDate} />
                </span>
            </span>
            {
                updatedDate && (
                    <div class="last-updated-on">
                        Last updated on <FormattedDate date={updatedDate} />
                    </div>
                )
            }
            {
                heroImage && (
                    <img width={720} height={360} src={heroImage} alt={title} />
                )
            }
            <div
                class="dark:text-dark_mode_text prose-code:whitespace-pre-wrap prose-code:break-words prose-code:overflow-x-auto"
            >
                <Content />
            </div>
        </SectionContainer>
    </div>
</Layout>

<script>
    // Function to create a Back to history button.
    const buttons = document.querySelectorAll(".blog-back-button");
    if (buttons) {
        buttons.forEach((button) => {
            button.addEventListener("click", () => {
                handleClick();
            });
        });
    }

    function handleClick() {
        if (window.history.length > 1) {
            window.history.back();
        } else {
            window.location.href = "/blogs/";
        }
    }
</script>
